parameters:
  - name: package_version
    type: string
    default: ''
  - name: installer_prefix
    type: string
    default: ''
  - name: cpuVersions
    type: object
    default:
      - arm64
      - x64
      - x86

jobs:
- job: Signing_win
  displayName: 'Signing Windows executables'
  dependsOn: Packaging_win
  pool:
    vmImage: 'windows-latest'

  steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      artifactName: 'win-installer'
      targetPath: '$(Pipeline.Workspace)/win-installer'
    displayName: 'Download artifacts'
  - task: NuGetAuthenticate@1
    displayName: 'Nuget authenticate'
  - task: DotNetCoreCLI@2
    displayName: 'Install SignToolClient'
    inputs:
      command: 'custom'
      custom: 'tool'
      arguments: 'install --global SignToolClient --add-source $(PackageSourceUrl)'
  - ${{ each cpuVersion in parameters.cpuVersions }}:
    - task: PowerShell@2
      displayName: 'Sign exe file for cpu (${{ cpuVersion }})'
      inputs:
        targetType: 'inline'
        script: |
          $v = "${{ parameters['package_version'] }}"
          $newFileName = "itp-v$v-${{ parameters.installer_prefix }}-${{ cpuVersion }}-win.exe"
          Write-Host "Signing file: $newFileName"
          signtoolclient sign --service-url $(SigningServiceUrl) --BsiToken $(SigningServiceToken) "$(Pipeline.Workspace)/win-installer/$newFileName"
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Pipeline.Workspace)/win-installer'
      artifactName: 'signed-win-installer'
    displayName: 'Upload signed artifacts'